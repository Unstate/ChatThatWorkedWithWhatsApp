{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\my-app\\\\src\\\\Chat\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport classes from './../styles/Chat.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = _ref => {\n  _s();\n  let {\n    idInstance,\n    apiTokenInstance,\n    friendNumber\n  } = _ref;\n  const [message, setMessage] = useState('');\n  const url = `https://api.green-api.com/waInstance${idInstance}/sendMessage/${apiTokenInstance}`;\n  const payload = {\n    chatId: '11001234567@c.us',\n    message: 'I use Green-API to send this message to you!'\n  };\n  axios.post(url, payload, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    console.log(response.data);\n  }).catch(error => {\n    console.error(error);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chatContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.info,\n        children: [\"Chat with: \", friendNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.message,\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Enter your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Chat, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","classes","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","idInstance","apiTokenInstance","friendNumber","message","setMessage","url","payload","chatId","post","headers","then","response","console","log","data","catch","error","children","className","chatContainer","info","fileName","_jsxFileName","lineNumber","columnNumber","chat","inputContainer","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/Projects/my-app/src/Chat/Chat.tsx"],"sourcesContent":["import React from 'react'\r\nimport {useState} from 'react'\r\nimport classes from './../styles/Chat.module.css';\r\nimport axios from 'axios';\r\n\r\ninterface ChatProps {\r\n    idInstance: string;\r\n    apiTokenInstance: string;\r\n    friendNumber: string\r\n}\r\n\r\nconst Chat:React.FC<ChatProps> = ({idInstance,apiTokenInstance,friendNumber}) => {\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const url = `https://api.green-api.com/waInstance${idInstance}/sendMessage/${apiTokenInstance}`;\r\nconst payload = {\r\n  chatId: '11001234567@c.us',\r\n  message: 'I use Green-API to send this message to you!'\r\n};\r\n\r\naxios.post(url, payload, {\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n  .then((response) => {\r\n    console.log(response.data);\r\n  })\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.chatContainer}>\r\n                <div className={classes.info}>Chat with: {friendNumber}</div>\r\n                <div className={classes.chat}></div>\r\n                <div className={classes.inputContainer}>\r\n                    <input className={classes.message} type='text' value={message} onChange={(e) => setMessage(e.target.value)} placeholder='Enter your message'></input>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chat"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQ1B,MAAMC,IAAwB,GAAGC,IAAA,IAAgD;EAAAC,EAAA;EAAA,IAA/C;IAACC,UAAU;IAACC,gBAAgB;IAACC;EAAY,CAAC,GAAAJ,IAAA;EAExE,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMe,GAAG,GAAI,uCAAsCL,UAAW,gBAAeC,gBAAiB,EAAC;EACnG,MAAMK,OAAO,GAAG;IACdC,MAAM,EAAE,kBAAkB;IAC1BJ,OAAO,EAAE;EACX,CAAC;EAEDX,KAAK,CAACgB,IAAI,CAACH,GAAG,EAAEC,OAAO,EAAE;IACvBG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;EAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;EAEA,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACIvB,OAAA;MAAKwB,SAAS,EAAE3B,OAAO,CAAC4B,aAAc;MAAAF,QAAA,gBAClCvB,OAAA;QAAKwB,SAAS,EAAE3B,OAAO,CAAC6B,IAAK;QAAAH,QAAA,GAAC,aAAW,EAACf,YAAY;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7D9B,OAAA;QAAKwB,SAAS,EAAE3B,OAAO,CAACkC;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpC9B,OAAA;QAAKwB,SAAS,EAAE3B,OAAO,CAACmC,cAAe;QAAAT,QAAA,eACnCvB,OAAA;UAAOwB,SAAS,EAAE3B,OAAO,CAACY,OAAQ;UAACwB,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEzB,OAAQ;UAAC0B,QAAQ,EAAGC,CAAC,IAAK1B,UAAU,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,WAAW,EAAC;QAAoB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAzB,EAAA,CAjCKF,IAAwB;AAAAoC,EAAA,GAAxBpC,IAAwB;AAmC9B,eAAeA,IAAI;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}