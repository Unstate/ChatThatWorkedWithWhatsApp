{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B 2022\\\\react\\\\my-app\\\\src\\\\Chat\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport classes from './../styles/Chat.module.css';\nimport axios from 'axios';\n\n// Вынести в отдельный файл Props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = _ref => {\n  _s();\n  let {\n    idInstance,\n    apiTokenInstance,\n    friendNumber,\n    chat,\n    setFriendMessage,\n    setChat\n  } = _ref;\n  // Принимать через пропсы\n  const [message, setMessage] = useState('');\n  const [whoTyped, setWhoTyped] = useState(false);\n  //\n\n  const clearInput = () => {\n    setMessage('');\n  };\n  const sendMessage = () => {\n    const endpointURL = `https://api.green-api.com/waInstance${idInstance}/sendMessage/${apiTokenInstance}`;\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const data = {\n      chatId: friendNumber + '@c.us',\n      message: message\n    };\n    axios.post(endpointURL, data, {\n      headers\n    }).then(response => {\n      console.log(`[Response]: ${response.data}`);\n    }).catch(error => {\n      console.error(`[ERROR ${error.response.status}]: ${error.response.statusText} ${error.response.data}`);\n    });\n    clearInput();\n    processingNotification();\n    setWhoTyped(true);\n    setChat({\n      ...chat,\n      message: message\n    });\n  };\n  const processingNotification = () => {\n    const config = {\n      method: 'get',\n      maxBodyLength: Infinity,\n      url: `https://api.green-api.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}`,\n      headers: {}\n    };\n    axios.request(config).then(response => {\n      console.log(JSON.stringify(response.data));\n      const receiptId = response.data.receiptId;\n      if (response.data.body.typeWebhook === 'incomingMessageReceived') {\n        setWhoTyped(false);\n        setFriendMessage(response.data.body.messageData.textMessageData.textMessage);\n        setChat({\n          ...chat,\n          message: response.data.body.messageData.textMessageData.textMessage,\n          whoTyped: false\n        });\n        // console.log(response.data.body.messageData.textMessageData.textMessage)\n      }\n\n      deleteNot(receiptId);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const deleteNot = receiptId => {\n    let config = {\n      method: 'delete',\n      maxBodyLength: Infinity,\n      url: `https://api.green-api.com/waInstance${idInstance}/deleteNotification/${apiTokenInstance}/${receiptId}`,\n      headers: {}\n    };\n    axios.request(config).then(response => {\n      console.log(JSON.stringify(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  // setInterval(() => recieveNot(),1000)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chatContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.info,\n        children: [\"Chat with: \", friendNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chat,\n        children: chat.map(letter => whoTyped ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-500\",\n          children: letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-500\",\n          children: letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 95\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.message,\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Enter your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.sendButton,\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.sendButton,\n          onClick: processingNotification,\n          children: \"Get\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Chat, \"fbhhlNC5PYqUSbqsBwZRTiDIcRM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","classes","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","idInstance","apiTokenInstance","friendNumber","chat","setFriendMessage","setChat","message","setMessage","whoTyped","setWhoTyped","clearInput","sendMessage","endpointURL","headers","data","chatId","post","then","response","console","log","catch","error","status","statusText","processingNotification","config","method","maxBodyLength","Infinity","url","request","JSON","stringify","receiptId","body","typeWebhook","messageData","textMessageData","textMessage","deleteNot","children","className","chatContainer","info","fileName","_jsxFileName","lineNumber","columnNumber","map","letter","inputContainer","type","value","onChange","e","target","placeholder","sendButton","onClick","_c","$RefreshReg$"],"sources":["D:/Проекты 2022/react/my-app/src/Chat/Chat.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport classes from './../styles/Chat.module.css';\r\nimport axios from 'axios';\r\n\r\n\r\n// Вынести в отдельный файл Props\r\ninterface ChatProps {\r\n    idInstance: string;\r\n    apiTokenInstance: string;\r\n    friendNumber: string;\r\n    friendMessage: FriendMessage[];\r\n    setFriendMessage: Function;\r\n    chat: chatInterface;\r\n    setChat: Function;\r\n}\r\n\r\ninterface FriendMessage {\r\n    textMessage: string;\r\n    isTemplateMessage: boolean;\r\n}\r\n\r\ninterface Item {\r\n    message: string;\r\n    whoTyped: boolean;\r\n}\r\n\r\nexport interface chatInterface {\r\n    chat: Item[]\r\n}\r\n\r\n\r\nconst Chat: React.FC<ChatProps> = ({ idInstance, apiTokenInstance, friendNumber,chat, setFriendMessage,setChat }) => {\r\n\r\n    // Принимать через пропсы\r\n    const [message, setMessage] = useState('')\r\n    const [whoTyped, setWhoTyped] = useState(false)\r\n    //\r\n    \r\n    const clearInput = () => {\r\n        setMessage('')\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        const endpointURL = `https://api.green-api.com/waInstance${idInstance}/sendMessage/${apiTokenInstance}`;\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        const data = {\r\n            chatId: friendNumber + '@c.us',\r\n            message: message\r\n        };\r\n\r\n        axios.post(endpointURL, data, { headers })\r\n            .then((response) => {\r\n                console.log(`[Response]: ${response.data}`);\r\n            })\r\n            .catch((error) => {\r\n                console.error(`[ERROR ${error.response.status}]: ${error.response.statusText} ${error.response.data}`);\r\n            });\r\n        clearInput()\r\n        processingNotification()\r\n        setWhoTyped(true)\r\n        setChat({...chat,message: message})\r\n    }\r\n\r\n    const processingNotification = () => {\r\n        const config = {\r\n            method: 'get',\r\n            maxBodyLength: Infinity,\r\n            url: `https://api.green-api.com/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}`,\r\n            headers: { }\r\n          };\r\n          \r\n          axios.request(config)\r\n          .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n            const receiptId = response.data.receiptId\r\n            if (response.data.body.typeWebhook === 'incomingMessageReceived') {\r\n                setWhoTyped(false)\r\n                setFriendMessage(response.data.body.messageData.textMessageData.textMessage)\r\n                setChat({...chat, message:response.data.body.messageData.textMessageData.textMessage, whoTyped: false})\r\n                // console.log(response.data.body.messageData.textMessageData.textMessage)\r\n            }\r\n            deleteNot(receiptId)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n          \r\n    }\r\n\r\n   \r\n\r\n    const deleteNot = (receiptId:number) => {\r\n        let config = {\r\n            method: 'delete',\r\n            maxBodyLength: Infinity,\r\n            url: `https://api.green-api.com/waInstance${idInstance}/deleteNotification/${apiTokenInstance}/${receiptId}`,\r\n            headers: { }\r\n          };\r\n          axios.request(config)\r\n          .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n          \r\n    }\r\n\r\n    // setInterval(() => recieveNot(),1000)\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.chatContainer}>\r\n                <div className={classes.info}>Chat with: {friendNumber}</div>\r\n                <div className={classes.chat}>\r\n                    {chat.map(letter=>whoTyped ? <div className='bg-red-500'>{letter}</div> : <div className='bg-blue-500'>{letter}</div>)}\r\n                    {/* {chat.map(letter=><div>{letter}</div>)} */}\r\n                </div>\r\n                <div className={classes.inputContainer}>\r\n                    <input className={classes.message} type='text' value={message} onChange={(e) => setMessage(e.target.value)} placeholder='Enter your message'></input>\r\n                    <button className={classes.sendButton} onClick={sendMessage}>Send</button>\r\n                    <button className={classes.sendButton} onClick={processingNotification}>Get</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}